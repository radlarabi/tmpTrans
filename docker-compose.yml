services:

  nginx:
    build: ./backend/ws/
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    env_file:
      - .env
    networks:
      - mynetwork
    depends_on:
      - authentication
    restart: always

  database:
    image: postgres:latest
    container_name: database
    volumes:
      - ./database/:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - mynetwork
    restart: always


  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    depends_on:
      - database
    ports:
      - "8080:8080"
    networks:
      - mynetwork



  authentication:
    build: ./backend/Authentication/
    image: auth
    container_name: auth
    ports:
      - "8000:8000"
    volumes:
      - ./backend/Authentication:/Authentication/
    depends_on:
      - database
    env_file:
      - .env
    networks:
      - mynetwork
    restart: always


  game:
    build: ./backend/Game/
    image: game
    container_name: game
    ports:
      - "8001:8001"
    volumes:
      - ./backend/Game:/Game/
    depends_on:
      - database
    env_file:
      - .env
    networks:
      - mynetwork
    restart: always


  frontend:
    build: ./frontend/
    image: frontend
    container_name: frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    networks:
      - mynetwork
    depends_on:
      - adminer
    env_file:
      - .env

networks:
  mynetwork:
    driver: bridge
